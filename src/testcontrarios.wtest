import contrarios.*
import wollok.game.*
import objetos.*

//los jugadores contrarios no se encuentran en movimiento
describe "ankara "{
	//defensor ingles con ataque 3 en la posicion 4,2
	const defensorIngles = new JugadorIngles(position= game.at(4,2), ataque= 3)
	//defensor brasilero con ataque 20 en la posicion 3,2
	const defensorBrasilero = new JugadorBrasilero(position= game.at(3,2), ataque= 20)
	//defensor aleman con ataque 5 en la posicion 4,4
	const defensorAleman = new JugadorAleman(position= game.at(4,4), ataque= 5)
	//mediocampista aleman con ataque 5 en la posicion -10,2
	const mediocampistaAleman = new JugadorAleman(position= game.at(-10,2), ataque= 5)
	
	// una pelota
	const pelota = new Pelota(position= game.at(0,2))
	method initialize() {
		game.addVisual(defensorIngles)
		game.addVisual(defensorBrasilero)
		game.addVisual(defensorAleman)
		game.addVisual(mediocampistaAleman)
		game.addVisual(lionel)
	}
	test "los jugadores contrarios se encuentran en el juego"{
		// asegurarse que defensorIngles se encuentra en el juego
		assert.that(game.hasVisual(defensorIngles))
		// asegurarse que defensorBrasilero se encuentra en el juego 
		assert.that(game.hasVisual(defensorBrasilero))
		// asegurarse que defensorAleman se encuentra en el juego 
		assert.that(game.hasVisual(defensorAleman))
		// asegurarse que mediocampistaAleman no se encuentra en el juego 
		assert.that(game.hasVisual(mediocampistaAleman))
	}
	test "los jugadores contrarios se encuentran en el tablero"{
		// asegurarse que defensorIngles se encuentra en el tablero
		assert.that(defensorIngles.dentroDelTablero())
		// asegurarse que defensorBrasilero se encuentra en el tablero 
		assert.that(defensorBrasilero.dentroDelTablero())
		// asegurarse que defensorAleman se encuentra en el tablero 
		assert.that(defensorAleman.dentroDelTablero())
		// asegurarse que mediocampistaAleman no se encuentra en el tablero 
		assert.notThat(mediocampistaAleman.dentroDelTablero())
	}
	test "avanzar"{
		// avanzar con defensor defensorIngles
		defensorIngles.avanzar()
		// avanzar con defensor defensorBrasilero
		defensorBrasilero.avanzar()
		// avanzar con defensor defensorAleman
		defensorAleman.avanzar()
		//asegurarse que la posicion de defensorIngles es x=3 e Y=1
		assert.equals(game.at(3,1), defensorIngles.position())
		//asegurarse que la posicion de defensorBrasilero es x=2 e Y=2
		assert.equals(game.at(2,2), defensorBrasilero.position())
		//asegurarse que la posicion de defensorAleman es x=3 e Y=4
		assert.equals(game.at(3,4), defensorAleman.position())
		
		//avanzar una vez mas con defensorIngles
		defensorIngles.avanzar()
		//asegurarse que la posicion de defensorIngles es x=2 e Y=2 (porque baja y luego sube)
		assert.equals(game.at(2,2), defensorIngles.position())
	}
//	test "colisiona con lionel"{
//		 defensorIngles colisiona con lionel 
//		
//		defensorAleman colisiona con lionel
//		
//		defensorIngles colisiona con lionel
//		
//	}
//	test "colisiona con pelota"{
//		
//	}
	
//	test" colisiona con una bolsa"{
//		
//	}
//	test "colisiona con un consumible"{
//		
//	}
//	test "la pelota se encuentra justo delante"{
//		
//	}
}

